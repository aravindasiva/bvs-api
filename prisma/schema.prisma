generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ClientType {
  VESSEL_OWNER
  VESSEL_CHARTERER
}

enum GlobalRole {
  BVS_ADMIN
}

model Client {
  id        String     @id @default(uuid()) @db.Uuid
  name      String     @unique
  type      ClientType
  logoUrl   String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  memberships Membership[]
}

model Membership {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  clientId  String   @db.Uuid
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  client Client @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@unique([userId, clientId])
  @@index([userId])
  @@index([clientId])
}

model UserGlobalRole {
  id        String     @id @default(uuid()) @db.Uuid
  userId    String     @db.Uuid
  role      GlobalRole
  createdAt DateTime   @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, role])
  @@index([userId])
}

model User {
  id           String   @id @default(uuid()) @db.Uuid
  email        String   @unique
  firstName    String?
  lastName     String?
  avatarUrl    String?
  passwordHash String // REQUIRED for local auth
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  memberships Membership[]
  globalRoles UserGlobalRole[]
}
