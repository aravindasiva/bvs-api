name: Apply DB migrations to Neon (prod)

on:
  push:
    branches: [ main ]
    # Optional: run only when migration files change
    # paths:
    #   - "prisma/migrations/**"
  workflow_dispatch:
    inputs:
      run_seed:
        type: boolean
        description: "Run npm run seed after migrations against Neon prod (DANGER for prod data)"
        default: false

jobs:
  migrate:
    runs-on: ubuntu-latest
    concurrency: neon-prod-db
    # Optional: add an Environment named "production" in repo settings to require approvals
    environment: production

    # Map optional Render deploy hook secret to env so we can use it in "if:"
    env:
      RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps (no lifecycle scripts)
        run: npm ci --ignore-scripts

      - name: Generate Prisma Client (needed because ignore-scripts skipped postinstall)
        run: npx prisma generate

      - name: Apply Prisma migrations (Neon prod)
        env:
          # Use the DIRECT connection string for Neon production (not pooled).
          # Secret must include: sslmode=require&channel_binding=prefer
          # Do NOT include: pgbouncer=true or use a -pooler host.
          DATABASE_URL: ${{ secrets.NEON_DATABASE_URL_DIRECT_PROD }}
        run: npx prisma migrate deploy

      - name: Seed database (optional)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.run_seed }}
        env:
          # Same DIRECT connection string to run prisma db seed (tsx prisma/seed.ts)
          DATABASE_URL: ${{ secrets.NEON_DATABASE_URL_DIRECT_PROD }}
        run: npm run seed

      # Optional: trigger Render deploy after successful migrations (and optional seed)
      - name: Trigger Render deploy
        if: ${{ env.RENDER_DEPLOY_HOOK != '' }}
        run: curl -fsSL -X POST "${{ env.RENDER_DEPLOY_HOOK }}"
